from flask import Flask, request
import json
import vk_api
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import sqlite3

app = Flask(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open("config.json", "r", encoding="utf-8") as f:
    config = json.load(f)

CONFIRMATION_TOKEN = config["confirmation_token"]
GROUP_ID = config["group_id"]
SECRET = config["secret"]
VK_TOKEN = config["vk_token"]

vk_session = vk_api.VkApi(token=VK_TOKEN)
vk = vk_session.get_api()

DB_PATH = "users.db"

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
def connect_db():
    return sqlite3.connect(DB_PATH)

# –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_link(user_id):
    return f"https://vk.com/id{user_id}"

# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_roles(user_id):
    with connect_db() as conn:
        cur = conn.cursor()
        cur.execute("SELECT role FROM roles WHERE user_id = ?", (str(user_id),))
        return [row[0] for row in cur.fetchall()]

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–æ–ª–∏
def has_role(user_id, role):
    return role in get_roles(user_id)

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫
def set_nick(user_id, nickname):
    with connect_db() as conn:
        cur = conn.cursor()
        cur.execute("REPLACE INTO users (user_id, nickname) VALUES (?, ?)", (str(user_id), nickname))
        conn.commit()

# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∏–∫–æ–≤
def get_nicklist():
    with connect_db() as conn:
        cur = conn.cursor()
        cur.execute("SELECT user_id, nickname FROM users")
        return cur.fetchall()

# –í—ã–¥–∞—Ç—å —Ä–æ–ª—å
def add_role(user_id, role):
    with connect_db() as conn:
        cur = conn.cursor()
        cur.execute("REPLACE INTO roles (user_id, role) VALUES (?, ?)", (str(user_id), role))
        conn.commit()

# –£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å
def remove_role(user_id):
    with connect_db() as conn:
        cur = conn.cursor()
        cur.execute("DELETE FROM roles WHERE user_id = ?", (str(user_id),))
        conn.commit()

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@app.route("/", methods=["POST"])
def callback():
    event = request.get_json()

    if event["type"] == "confirmation":
        return CONFIRMATION_TOKEN

    if event["type"] == "message_new":
        msg = event["object"]["message"]
        text = msg.get("text", "")
        user_id = msg["from_id"]
        peer_id = msg["peer_id"]
        args = text.strip().split()
        cmd = args[0].lower() if args else ""

        # –ö–æ–º–∞–Ω–¥–∞ /help
        if cmd == "/help":
            vk.messages.send(
                peer_id=peer_id,
                message=(
                    "üìò –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n"
                    "/setnick @user –Ω–∏–∫ ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫\n"
                    "/nicklist ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∏–∫–æ–≤\n"
                    "/giverole @user —Ä–æ–ª—å ‚Äî –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å\n"
                    "/removerole @user ‚Äî —É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å\n"
                    "/help ‚Äî –ø–æ–º–æ—â—å"
                ),
                random_id=0
            )

        # –ö–æ–º–∞–Ω–¥–∞ /setnick
        elif cmd == "/setnick" and len(args) >= 3:
            if has_role(user_id, "moderator") or has_role(user_id, "admin"):
                target = args[1].replace("@", "").replace("[", "").replace("]", "")
                nick = " ".join(args[2:])
                set_nick(target, nick)
                vk.messages.send(peer_id=peer_id, message=f"‚úÖ –ù–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {nick}", random_id=0)
            else:
                vk.messages.send(peer_id=peer_id, message="‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤", random_id=0)

        # –ö–æ–º–∞–Ω–¥–∞ /nicklist
        elif cmd == "/nicklist":
            entries = get_nicklist()
            if entries:
                text = "üìã –ù–∏–∫–∏:\n" + "\n".join([f"{uid}: {nick}" for uid, nick in entries])
            else:
                text = "‚ùå –ù–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            vk.messages.send(peer_id=peer_id, message=text, random_id=0)

        # –ö–æ–º–∞–Ω–¥–∞ /giverole
        elif cmd == "/giverole" and len(args) >= 3 and has_role(user_id, "admin"):
            target = args[1].replace("@", "").replace("[", "").replace("]", "")
            role = args[2]
            add_role(target, role)
            vk.messages.send(peer_id=peer_id, message=f"‚úÖ –†–æ–ª—å {role} –≤—ã–¥–∞–Ω–∞", random_id=0)

        # –ö–æ–º–∞–Ω–¥–∞ /removerole
        elif cmd == "/removerole" and len(args) >= 2 and has_role(user_id, "admin"):
            target = args[1].replace("@", "").replace("[", "").replace("]", "")
            remove_role(target)
            vk.messages.send(peer_id=peer_id, message="‚úÖ –†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞", random_id=0)

        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        else:
            vk.messages.send(peer_id=peer_id, message="‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤", random_id=0)

    return "ok"
